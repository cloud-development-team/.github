name: Create Github Release

run-name: ${{ github.event.sender.login }} executes 'create_release' action for ${{ inputs.jira_key }}

on:
  workflow_dispatch:
    inputs:
      jira_key:
        description: 'Jira Project Key'
        required: true
        default: 'KDOG'
        type: string
      release_version:
        description: 'Release Version'
        required: true
        default: ""
        type: string
      release_env:
        description: 'Release Environment'
        required: false
        default: ""
        type: string

jobs:
  create-release-sp012:
    if: ${{ inputs.jira_key == 'RMR' }}
    name: Get Previous Version
    environment: main
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      previous_version: ${{ steps.version.outputs.previous_version }}
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: cloud-development-team/saasportal-cicd-test
          ref: refs/heads/development
          token: ${{ secrets.AUTOMATION_GH_MANAGEPACKAGE_TOKEN }}


      - name: Create Github Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.AUTOMATION_GH_MANAGEPACKAGE_TOKEN }}
        with:
          tag_name: ${{ inputs.release_version }}
          repository: cloud-development-team/saasportal-cicd-test
          commitish: ${{ inputs.release_env }}
          token: ${{ secrets.AUTOMATION_GH_MANAGEPACKAGE_TOKEN }}
          body: |
            🤖 This release was created by ${{ github.event.sender.login }}.
            - More information about this release can be found in Jira Release. 🔍
            - Jira Release should have a release like this version. If the same version is not there, contact DevOps. 📞
            - [Jira Release Link](https://hanwhavision.atlassian.net/projects/${{ inputs.jira_key }}?selectedItem=com.atlassian.jira.jira-projects-plugin%3Arelease-page)

      - name: Github Release Result
        run: |
          echo "🔍 Check the release results"
          echo "🔗 Github Release Link : https://github.com/cloud-development-team/saasportal-cicd-test/releases/tag/${{ inputs.release_version }}"
      
    
   
  initial_setting:
    if: ${{ inputs.jira_key != 'RMR' }}
    outputs:
      repo: ${{ steps.set_env.outputs.repo }}
      release_branch: ${{ steps.set_env.outputs.release_branch }}
    name: Initial Setting
    runs-on: ubuntu-latest
    steps:
      - name: Repository List
        id: set_env
        run: |
          if [ ${{ inputs.jira_key }}  == "CPD" ]; then
            repo=("dmpro-gitops-prod")
            repo=`jq --compact-output --null-input '$ARGS.positional' --args -- "${repo[@]}"`
            release_branch=main
          elif [ ${{ inputs.jira_key }}  == "IS360" ]; then
            repo=("global-infra-version")
            repo=`jq --compact-output --null-input '$ARGS.positional' --args -- "${repo[@]}"`
            release_branch=main
          elif [ ${{ inputs.jira_key }} == "KDOG" ]; then
            repo=("global-infra-version")
            repo=`jq --compact-output --null-input '$ARGS.positional' --args -- "${repo[@]}"`
            release_branch=main
          fi
          
          echo "Repository  : $REPO\nBranch      : $REPO1"
          echo "repo=$repo" >> $GITHUB_OUTPUT
          echo "release_branch=$release_branch" >> $GITHUB_OUTPUT
          
  create-release:
    if: ${{ inputs.jira_key != 'RMR' }}
    name: Create tag for new image
    needs: [initial_setting]
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo:  ${{fromJson(needs.initial_setting.outputs.repo)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: cloud-development-team/${{ matrix.repo }}
          ref: refs/heads/${{ needs.initial_setting.outputs.release_branch }}
          token: ${{ secrets.AUTOMATION_GH_MANAGEPACKAGE_TOKEN }}

      - name: Create Github Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.AUTOMATION_GH_MANAGEPACKAGE_TOKEN }}
        with:
          tag_name: ${{ inputs.release_version }}
          release_name: ${{ inputs.release_version }}
          repo: ${{ matrix.repo }}
          commitish: ${{ needs.initial_setting.outputs.release_branch }}
          body: |
            🤖 This release was created by ${{ github.event.sender.login }}.
            - More information about this release can be found in Jira Release. 🔍
            - Jira Release should have a release like this version. If the same version is not there, contact DevOps. 📞
            - [Jira Release Link](https://hanwhavision.atlassian.net/projects/${{ inputs.jira_key }}?selectedItem=com.atlassian.jira.jira-projects-plugin%3Arelease-page)

      - name: Github Release Result
        run: |
          echo "🔍 Check the release results"
          echo "🔗 Github Release Link : https://github.com/cloud-development-team/${{ matrix.repo }}/releases/tag/${{ inputs.release_version }}"

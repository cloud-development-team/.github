# https://docs.github.com/en/actions/using-workflows/reusing-workflows#example-reusable-workflow
name: GitOps Update container image

on:
  workflow_call:
    inputs:
      repository_name:
        required: true
        description: "Name of repository"
        type: string
      repository_ref:
        required: false
        description: "Ref value of repository"
        type: string
        default: "main"
      image_name:
        required: true
        description: "Name of container registry and image"
        type: string
      image_tag:
        required: true
        description: "Tag of image"
        type: string
      yaml_path:
        required: true
        description: "Path to the yaml file defined for the application"
        type: string
      json_path:
        required: true
        description: "Path to the yaml file defined for the application"
        type: string
      application_name:
        required: false
        description: "Name of actual application"
        type: string
        default: "null"
    secrets:
      GH_USERNAME:
        required: true
      GH_MANAGEPACKAGETOKEN:
        required: false
        description: "If not provided, the repo creds will be used."

jobs:
  gitops-update:
    runs-on: ubuntu-latest
    name: GitOps Update
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set short commit sha to output
        id: github-var
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Checkout state repo
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository_name }}
          path: ./gitops
          ref: ${{ inputs.repository_ref }}
          token: ${{ secrets.GH_MANAGEPACKAGETOKEN }}

      - name: QA/Prod Update BE version.json(main)
        if: ${{ inputs.application_name != 'dmpro-frontend-mono' && inputs.json_path != 'dev_version.yaml'}}
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '.["BackendVersion"].["${{ inputs.application_name }}"] = "${{ inputs.image_tag }}"' ./gitops/${{ inputs.json_path }}

      - name: QA/Prod Update FE version.json(main)
        if: ${{ inputs.application_name == 'dmpro-frontend-mono' && inputs.json_path != 'dev_version.yaml'}}
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '.["FrontendVersion"].["${{ inputs.application_name }}"] = "${{ inputs.image_tag }}"' ./gitops/${{ inputs.json_path }}

      - name: DEV Deploy - Update image
        if: ${{ inputs.json_path == 'dev_version.yaml' && inputs.image_name != 'no_eks' }}
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '
              .image.repository = "${{ inputs.image_name }}" |
              .image.tag = "${{ inputs.image_tag }}"
            ' ./gitops/${{ inputs.yaml_path }}

      - name: DEV Update detailed version information
        if: ${{ inputs.application_name != 'null' && inputs.json_path == 'dev_version.yaml' }}
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '
              .${{ inputs.application_name }}.image-tag = "${{ inputs.image_tag }}" |
              .${{ inputs.application_name }}.commit-sha = "${{ steps.github-var.outputs.sha_short }}"
            ' ./gitops/${{ inputs.json_path }}

      - name: QA/Prod Update detailed version information
        if: ${{ inputs.application_name != 'null' && inputs.json_path != 'dev_version.yaml' && inputs.image_name != 'no_eks' }}
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '
              .${{ inputs.application_name }}.image-tag = "${{ inputs.image_tag }}" |
              .${{ inputs.application_name }}.commit-sha = "${{ steps.github-var.outputs.sha_short }}"
            ' ./gitops/${{ inputs.yaml_path }}

      - name: Commit changes
        working-directory: ./gitops
        run: |
          git config user.name "GitHub Actions Bot" && \
          git config user.email "<>" && \
          git add --all
          git commit -m "chore: update ${{ inputs.application_name }} image tag as ${{ inputs.image_tag }}" && \
          git push origin main
        continue-on-error: true

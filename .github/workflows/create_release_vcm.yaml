name: Release Jira Version

run-name: 'create_release: ${{ inputs.jira_key }}-${{ inputs.release_version }} by ${{ github.event.sender.login }}'

on:
  workflow_dispatch:
    inputs:
      jira_key:
        description: 'Jira Project Key'
        required: true
        default: 'VCM'
        type: string
      release_version:
        description: 'Release Version'
        required: true
        default: ""
        type: string
      release_env:
        description: 'Release Environment'
        required: true
        default: ""
        type: string

jobs:
  initial_setting:
    if: github.actor == 'HVC-Automation'
    outputs:
      target_repo: ${{ steps.set_env.outputs.target_repo }}
      target_branch: ${{ inputs.release_env == 'QA' && 'release' || 'production' }}  #QA, PROD
      
    name: Initial Setting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Repository List
        id: set_env
        run: |
          if grep -q "SCHD" <<< "${{ inputs.release_version }}"; then
            repo=platform-job-scheduler
          fi

          echo "target_repo=$repo" >> $GITHUB_OUTPUT

      - name: Fail if environment is unknown
        if: ${{ steps.set_env.outputs.release_env == null }}
        run: |
          echo "Environment is not QA, PROD, or HOTFIX. Failing the workflow."
          exit 1

  jobscheduler:
    if: ${{ github.actor == 'HVC-Automation' && needs.initial_setting.outputs.target_repo == 'platform-job-scheduler' }} 
    needs: [initial_setting]
    name: Job Scheduler Deploy
    uses: ./.github/workflows/vcm-deploy-jobscheduler.yaml
    with:
      release_env: ${{ inputs.release_env }}
      target_repo: ${{ needs.initial_setting.outputs.target_repo }}
      target_branch: ${{ needs.initial_setting.outputs.target_branch }}
      release_version: ${{ inputs.release_version }}
    secrets: inherit  

  create-github-release:
    name: Create release
    if: ${{ github.actor == 'HVC-Automation' && needs.initial_setting.outputs.target_repo == 'platform-job-scheduler' }} 
    needs: [initial_setting , jobscheduler]
    environment: main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: cloud-development-team/${{ needs.initial_setting.outputs.target_repo }}
          ref: refs/heads/main
          token: ${{ secrets.AUTOMATION_GH_MANAGEPACKAGE_TOKEN }}

      - name: Create Github Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.AUTOMATION_GH_MANAGEPACKAGE_TOKEN }}
        with:
          tag_name: ${{ inputs.release_version }}
          release_name: ${{ inputs.release_version }}
          repo: ${{ needs.initial_setting.outputs.target_repo }}
          commitish: main
          body: |
            ü§ñ This release was created by ${{ github.event.sender.login }}.
            - Released By JIRA üîç
            - [Jira Release Link](https://hanwhavision.atlassian.net/projects/${{ inputs.jira_key }}?selectedItem=com.atlassian.jira.jira-projects-plugin%3Arelease-page)

      - name: Github Release Result
        run: |
          echo "üîç Check the release results"
          echo "üîó Github Release Link : https://github.com/cloud-development-team/${{ needs.initial_setting.outputs.target_repo }}/releases/tag/${{ inputs.release_version }}"
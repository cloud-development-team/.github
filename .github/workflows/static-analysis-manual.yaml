name: Manual Static Analysis
 
run-name: '[${{inputs.STREAM}}] ${{ github.event.sender.login }} executed manual static analysis'

on:
  workflow_dispatch:
    inputs:
      STREAM:
        description: 'Repository'
        required: true
        type: choice
        default: 'Insert Repo Name'
        options:  
          - dmpro-config-user
          - dmpro-dcs-generic
          - dmpro-dcs-specific
          - dmpro-gateway-notification
          - dmpro-hc-frontend-mono
          - dmpro-hook-wave
          - dmpro-manager-notification
          - dmpro-manager-task
          - dmpro-manager-user
          - dmpro-proxy-http
          - dmpro-updater-token
          - global-rule-engine
          - sightmind-backend-mono
          - sightmind-hc-frontend-mono
          - dmpro-hook-portal
          - dmpro-manager-schedule
          - dmpro-updater-devicemodel
          - dmpro-scheduler-consumer
          - dmpro-scheduler-producer
          - dmpro-updater-warranty
          - dmpro-authorization
      ANALYSIS_PATH:
        description: 'Target Path'
        required: true
        type: string
        default: '.'
      BRANCH:
        description: 'Target Branch'
        required: true
        type: string
        default: 'release'
      QUALITY_REPORT:
        description: 'Make static analysis report'
        required: false
        type: boolean
        default: true

jobs:
  initial-tasks: 
    name: Initial tasks
    runs-on: ubuntu-latest
    outputs:
      REPO_NAME: ${{ steps.set_env.outputs.REPO_NAME }}
      GH_MANAGEPACKAGE_TOKEN: ${{ secrets.GH_MANAGEPACKAGE_TOKEN}}
      AUTOMATION_GH_MANAGEPACKAGE_TOKEN: ${{ secrets.AUTOMATION_GH_MANAGEPACKAGE_TOKEN}}
    steps:
      - name: Set STREAM Env
        id: set_env
        run: |
          if [ ${{inputs.STREAM}}  == "dmpro-hc-frontend-mono" ]; then
            REPO_NAME=hc-frontend-mono
          elif [ ${{inputs.STREAM}}  == "global-rule-engine" ]; then
            REPO_NAME=cloudrnd-rule-engine
          elif [ ${{inputs.STREAM}}  == "sightmind-hc-frontend-mono" ]; then
            REPO_NAME=hc-frontend-mono
          else
            REPO_NAME=${{inputs.STREAM}}
          fi

          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_OUTPUT
          echo $REPO_NAME
            
  static-analysis:
    name: Analysis code quality
    uses: cloud-development-team/.github/.github/workflows/static-analysis.yaml@main
    needs: [initial-tasks]
    with:
      REPO_NAME: ${{ needs.initial-tasks.outputs.REPO_NAME }}
      BUILD_PATH: ${{ inputs.ANALYSIS_PATH }}
      QUALITY_REPORT: ${{ inputs.QUALITY_REPORT }}
      DISPATCH: true
      BRANCH: ${{ inputs.BRANCH }}
      STREAM: ${{ inputs.STREAM }}
      environment: ${{ github.ref_name }}
    secrets:
      GH_MANAGEPACKAGE_TOKEN: ${{ secrets.GH_MANAGEPACKAGE_TOKEN }}
      AUTOMATION_GH_MANAGEPACKAGE_TOKEN: ${{ secrets.AUTOMATION_GH_MANAGEPACKAGE_TOKEN }}